version: 2
jobs:
  build-deploy-docker:
    docker:
      - image: docker:18.05.0-ce-git #https://hub.docker.com/r/library/docker/tags/
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.05.0-ce #required for multi stage builds
      - run:
          name: Install Docker Compose
          command: |
            apk add --no-cache 'py2-pip'
            pip install 'docker-compose==1.21.1'
      - run:
          name: Build Docker images
          command: |
            docker-compose build
      - run:
          name: Run Tests
          command: |
            docker-compose up
      - run:
          name: Tag Docker image
          command: |
            docker tag chartjs-node-canvas $DOCKER_USER/chartjs-node-canvas:${CIRCLE_SHA1}
      - run:
          name: Push Docker image to Dockerhub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKER_USER/chartjs-node-canvas:${CIRCLE_SHA1}
  build-deploy-npm:
    working_directory: ~/app
    docker:
      - image: circleci/node:10.13.0
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/app
          paths: [.]
      - run:
          name: Run build
          command: npm run build
      - run:
          name: Run tests
          command: npm run test
      - attach_workspace:
          at: ~/app
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/app/.npmrc
      - run:
          name: Publish package
          command: npm publish
workflows:
  version: 2
  build-deploy:
    jobs:
      - build-deploy-docker:
          filters:
            branches:
              only: master
      - build-deploy-npm:
          filters:
            branches:
              only: master
